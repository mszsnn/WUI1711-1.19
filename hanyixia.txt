   1、选择排序
   function select(arr,type='desc') {
       for(let i=0;i<arr.length;i++){
           for(let j=i+1;j<arr.length;j++){
               if(type=='asc'){
                   if(arr[i]>arr[j]){
                       let tmp=arr[i];
                       arr[i]=arr[j];
                       arr[j]=tmp;
                   }
               }
               if(type=='desc'){
                   if(arr[i]<arr[j]){
                       let tmp=arr[i];
                       arr[i]=arr[j];
                       arr[j]=tmp;
                   }
               }
           }
       }
       console.log(arr);
   }
   select([3,2,7,8,4,11]);

   2、冒泡排序
   function bubble(arr,type='desc') {
       for(let i=0;i<arr.length;i++){
           for(let j=0;j<arr.length-i-1;j++){
               if(type=='asc'){
                   if(arr[j]>arr[j+1]){
                       let tmp=arr[j];
                       arr[j]=arr[j+1];
                       arr[j+1]=tmp;
                   }
               }
               if(type=='desc'){
                   if(arr[j]<arr[j+1]){
                       let tmp=arr[j];
                       arr[j]=arr[j+1];
                       arr[j+1]=tmp;
                   }
               }
           }
       }
       console.log(arr);
   }
   bubble([22,12,7,4,2]);

  3、求二维数组中长度最长的数组
   function len(arr) {
       let max=arr[0];
       for(let i=0;i<arr.length;i++){
           if(max.length<arr[i].length){
               max=arr[i];
           }
       }
       console.log(max);
   }
   len([[1,3,5,7],['a','v',1,5,6],[1,5]]);

   4、二维数组的和
   function add(arr) {
       let sum=0;
       for(let i=0;i<arr.length;i++){
           for(let j=0;j<arr[i].length;j++){
               sum+=arr[i][j];
           }
       }
       console.log(sum);
   }

   add([[1,2,4],[1,5,3],[2,3]]);

   5、二维数组的最大值
   function Max(arr) {
       let max=arr[0][0];
       for(let i=0;i<arr.length;i++){
           for(let j=0;j<arr[i].length;j++){
               if(max<arr[i][j]){
                   max=arr[i][j];
               }
           }
       }
       console.log(max);
   }
   Max([[1,3,4],[5,6,7],[2,4,7,10]]);

   6、复制一个二维数组
   function copy(arr) {
       let brr=[];
       for(let i=0;i<arr.length;i++){
           brr[i]=[];
           for(let j=0;j<arr[i].length;j++){
               brr[i][j]=arr[i][j]
           }
       }
       console.log(brr);
   }
   copy([[1,2],['a','b'],[2,6,8]]);

   7、找出数字数组里面大于5的数的个数
   function Count(arr) {
       let count=0;
       for(let i=0;i<arr.length;i++){
           if(arr[i]>5){
               count++;
           }
       }
       console.log(count);
   }
   Count([1,4,5,7,8,3,24,13]);

   8、选出这个数组里面大于5的数，组成一个数组
   function fun(arr) {
       let brr=[];
       let j=0;
       for(let i=0;i<arr.length;i++){
           if(arr[i]>5){
               brr[j]=arr[i];
               j++;
           }
       }
       console.log(brr);
   }
   fun([1,2,2,2,5,5,12,3,12,3,123,6,123]);

   9、输入一个数字或者字符添加在数组的最后
   function add(arr,nub) {
       arr[arr.length]=nub;
       console.log(arr);
   }
   add([1,4,'a',6],8);

   10、将数组中数字内容求和
   function arraySum(arr) {
       let sum=0;
       for(let i=0;i<arr.length;i++){
           if(arr[i] instanceof Array){
               for(let j=0;j<arr[i].length;j++){
                   sum+=arr[i][j];
               }
           }
           else {
               sum+=arr[i];
           }
       }
       console.log(sum);
   }
   arraySum([9,9],[1,6]);

   11、判断数组中是否所有数字都大于0
   function fun(arr) {
       let flag='所有数字都大于0';
       for(let i=0;i<arr.length;i++){
           if(arr[i]<=0){
               flag='不是所有的数字都大于0';
               break;
           }
       }
       console.log(flag);
   }
   fun([1,0,7,8]);

   12、合并俩个数组
   function merge(arr,brr) {
       let crr=[];
       for(let i=0;i<arr.length;i++){
           crr[crr.length]=arr[i];
       }
       for(let i=0;i<brr.length;i++){
           crr[crr.length]=brr[i];
       }
       console.log(crr);
   }
   merge(['a','c',1],[2,3,4]);

   13、找到数组中某一个值得位置
   function fun(arr,a) {
       for(let i=0;i<arr.length;i++){
           if(arr[i]===a){
               console.log(i);
           }
       }
   }
   fun([1,4,5,7,5,8],5);

   14、将数组反转
   function Reversal(arr) {
       let brr=[]
       for(let i=arr.length-1;i>=0;i--){
           brr[brr.length]=arr[i]
       }
       console.log(brr);
   }
   Reversal([1,2,3,5,6]);

   15、移除数组中等于3的元素
   function remove(arr) {
       let brr=[];
       for(let i=0;i<arr.length;i++){
           if(arr[i]===3){
               continue;
           }
           brr[brr.length]=arr[i]

       }
       console.log(brr);
   }
   remove([1,3,6,8,3]);

   16、删除数组中的第一个值
   function fun(arr) {
       let brr=[];
       for(let i=1;i<arr.length;i++){
           brr[brr.length]=arr[i];
       }
       console.log(brr);
   }
   fun([9,1,3,7,5]);

   17、在数组的前面添加一个值
   function add(arr,a) {
       for(let i=arr.length-1;i>=0;i--){
           arr[i+1]=arr[i]
       }
       arr[0]=a;
       console.log(arr);
   }
   add([1,2,34,5],'b');

   18、封装一个n行m列的表格
   function table(n,m) {
       document.write('<table width="500" border="1" cellpadding="10" cellspacing="0" align="center">');
       for(let i=1;i<=n;i++){
           document.write('<tr>')
           for(let j=1;j<=m;j++){
               document.write('<td></td>');
           }
           document.write('</tr>')
       }
       document.write('</table>')
   }
   table(2,5)

   19、封装一个n*n的乘法表
   function Mul(n) {
       for(let i=1;i<=n;i++){
           for(let j=1;j<=i;j++){
               document.write(i+'*'+j+'='+i*j+'&nbsp;');
               if(i==j){
                   document.write('<br>');
               }
           }
       }
   }
   Mul(11);

   20、输入一个数，判断是否为质数
   let nub=prompt('请输入数字');
   function prime(nub) {
       let flag='是质数'
       for(let i=2;i<nub;i++){
           if(nub%i==0){
               flag='不是质数';
           }
       }
       if(nub==1){
           flag='既不是质数也不是合数';
       }
       console.log(flag);
   }
   prime(nub);