 1.选择排序
    function xz(arr) {
        for(let i=0;i<arr.length;i++){
            for(let j=i+1;j<arr.length;j++){
                if(arr[i]<arr[j]){
                    let tmp=arr[i];
                    arr[i]=arr[j];
                    arr[j]=tmp;
                }
            }
        }
        console.log(arr);

    }
    xz([2,5,6,3,99,87,4,21,61])


    2.冒泡排序
    function mp(arr) {
        for(let i=0;i<arr.length;i++){
            for(let j=0;j<arr.length-1-i;j++){
                if(arr[j]<arr[j+1]){
                    let zhi=arr[j];
                    arr[j]=arr[j+1];
                    arr[j+1]=zhi;
                }
            }

        }
        console.log(arr)
    }
    mp([9,5,3,4,55,66,88,77,11])

    3.求二维数组中长度最长的数组
     function csz(arr) {
         let j=0;
         let brr=[];
         for(let i=0;i<arr.length;i++){

             if(arr[i].length>j){
                 j=arr[i].length;
                 brr=arr[i];
             }

         }
         console.log(brr)
     }
     csz([[1,2,5,3],[1,9,8],[6,5,7,2,33,5,44,99,1],[1,2,3,65,8]])


      4.求一个二维数组的和；
       function he(arr) {
           let sum=0;
           for(let i=0;i<arr.length;i++){
               for(let j=0;j<arr[i].length;j++){
                   sum+=arr[i][j];
               }
           }
           console.log(sum);
       }
       he([[1,2,3],[3,2]]);

        5.求一个二维数组的最大值
         function zui(arr) {
             let zong=arr[0][0];
             for(let i=0;i<arr.length;i++){
                 for(let j=0;j<arr[i].length;j++){
                     if(zong<arr[i][j]){
                         zong=arr[i][j];
                     }
                 }
             }
             console.log(zong);
         }
         zui([[1,9,8,5],[99,66,55,74,22],[332,521,414,200]]);

          6.复制一个二维数组
             function fun(arr) {
                 let brr=[];
                 for(let i=0;i<arr.length;i++){
                     brr[i]=[];
                     for(let j=0;j<arr[i].length;j++){
                         brr[i][j]=arr[i][j];
                     }

                 }
                 console.log(brr);
             }
             fun([[9,5,2,3,4,],[6,5,2,4,8,2]])

           7.找出一个数字数组大于5的个数
             function dayu(arr) {
                 let kk=0;
                 for(let i=0;i<arr.length;i++){
                     for(let j=0;j<arr[i].length;j++){
                         if(arr[i][j]===5){
                             kk++;
                         }
                     }
                 }
                 console.log(kk);
             }
             dayu([[12,56,85,5,6,2,4,5,5],[1,2,5,6,3,4,5,5]])

           8.选出数组里大于5的数，组成一个新的数组
               function nee(arr) {
                   let brr=[];
                   for(let i=0;i<arr.length;i++){
                       for(let j=0;j<arr[i].length;j++){
                           if(arr[i][j]>5){
                               brr[brr.length]=arr[i][j];
                           }
                       }
                   }
                   console.log(brr);
               }
               nee([[9,6,5,4,78,2],[3,21,55,44,12,96,20]])

             9.输入一个数字或字符，添加在数组最后
                function boo(arr) {
                    let w=prompt('请输入数字');
                    arr[arr.length]=w;
                    console.log(arr);
                }
                boo([1,2,5,6,3])


              10.将数组中的数字内容求和
                 function sou(arr) {
                     let count=0;
                     for(let i=0;i<arr.length;i++){
                         for(let j=0;j<arr[i].length;j++){
                             if(typeof arr[i][j]==='number'){
                                 count+=arr[i][j];
                             }
                         }
                     }
                     console.log(count);
                 }
                 sou([[1,23,63,5,4,5],['a','vv','ad','tyy'],[1,2,1,2]]);

                11.判断数组中是否所有数字都大于0
                  function pdd(arr) {
                      let flag='大于0';
                      for(let i=0;i<arr.length;i++){
                          for(let j=0;j<arr[i].length;j++){
                              if(arr[i][j]<0){
                                  flag='不全大于0';
                              }
                          }
                      }
                      console.log(flag);
                  }
                  pdd([[1,2,6,5],[-1,5,3,6,-5,-5],[1,2,5,23,4]])

                 12.合并两个数组
                    function uzi(arr,brr) {
                        for(let i=0;i<arr.length;i++){
                            brr[brr.length]=arr[i];
                        }
                        console.log(brr);
                    }
                    uzi([6,5,3,2,4,],['uy','qww',true])
    
    
                   13.找到数组中，某一个值的位置（下标）
                     function facker(arr,q) {
                         let wei=0;
                         for(let i=0;i<arr.length;i++){
                             if(arr[i]===q){
                                 wei=i;
                             }
                         }
                         console.log(wei);
                     }
                     facker([1,6,5,8,7,4,2],'a');
                       14.将数组反转
                       function fanz(arr) {
                           let brr=[];
                           for(let i=arr.length-1;i>=0;i--){
                               brr[brr.length]=arr[i];
                           }
                           console.log(brr);
                       }
                       fanz([1,2,3,4,5,6,7])
                      15.移除数组中等于3的元素
                      function ioi(arr) {
                          let brr=[];
                          for(let i=0;i<arr.length;i++){
                              if(arr[i]===3){
                                  continue;
                              }else{
                                  brr[brr.length]=arr[i];
                              }
                          }
                          console.log(brr);
                      }
                      ioi([2,3,6,5,4,1,22,3,55,3,66,3])
                       16.删除数组中的第一个值
                         function shanchu(arr) {
                             let brr=[];
                             for(let i=0;i<arr.length;i++){
                                 if(i===0){
                                     continue;
                                 }
                                 brr[brr.length]=arr[i];
                             }
                             console.log(brr);
                         }
                         shanchu([3,2,5,4,1,2,5,1,3,5,1])
                         17.在数组的前面添加一个值
                           function tianjia(arr) {
                               for(let i=arr.length;i>=0;i--){
                                   arr[i+1]=arr[i];
                               }
                               arr[0]=333;
                               console.log(arr);
                           }
                           tianjia([3,2,1,6,8,5,4,2,6])

                         18.封装一个n行m列的表格
                           function table(n,m) {
                               document.write('<table border="1" cellspacing="0" cellpadding="10">');
                                  for(let i=1;i<=n;i++){
                                      document.write("<tr bgcolor='yellow'>");
                                      for(let j=1;j<=m;j++){
                                          document.write("<td bgcolor='#ff6700'>Good</td>");
                                      }
                                      document.write('</tr>')
                                  }
                                  document.write('</table>')
                           }
                           table(9,9)

                             19.封装一个n*n的乘法表
                               function cheng(x,y) {
                                  let product;
                                  for(let i=1;i<=x;i++){
                                      for(let j=1;j<=y;j++){
                                          if(j>i){
                                              continue;
                                          }
                                          product=i*j;
                                          document.write(i+'*'+j+'='+product+'&nbsp')
                                      }
                                      document.write('<br>');
                                  }
                                  document.write('<br>')
                               }
                               cheng(12,12)

                            20.输入一个数，判断是不是质数
                             function pd(nb) {

                                 let flog='质数';
                                 for(let i=2;i<nb;i++){
                                     if(nb%1===0){
                                         flog='合数'
                                     }else if(nb===1){
                                         flog='既不是质数，也不是和数';
                                     }
                                 }
                                 console.log(flog);
                             }
                             pd(245)